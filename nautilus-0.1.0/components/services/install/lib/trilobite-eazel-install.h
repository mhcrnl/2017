/*
 * This file was generated by orbit-idl - DO NOT EDIT!
 */

#include <glib.h>
#define ORBIT_IDL_SERIAL 9
#include <orb/orbit.h>

#ifndef trilobite_eazel_install_H
#define trilobite_eazel_install_H 1
#ifdef __cplusplus
extern "C"
{
#endif				/* __cplusplus */

/** typedefs **/
#include <bonobo/Bonobo.h>
#if !defined(_Trilobite_Eazel_PackageStatusEnum_defined)
#define _Trilobite_Eazel_PackageStatusEnum_defined 1
   typedef enum
   {
      Trilobite_Eazel_UNKNOWN_STATUS,
      Trilobite_Eazel_SOURCE_NOT_SUPPORTED,
      Trilobite_Eazel_DEPENDENCY_FAIL,
      Trilobite_Eazel_BREAKS_DEPENDENCY,
      Trilobite_Eazel_INVALID,
      Trilobite_Eazel_CANNOT_OPEN,
      Trilobite_Eazel_PARTLY_RESOLVED,
      Trilobite_Eazel_RESOLVED
   }
   Trilobite_Eazel_PackageStatusEnum;
#if !defined(TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_0)
#define TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_0 't'
#define TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_1 'r'
#define TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_2 'i'
#define TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_3 'l'
#define TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_4 'o'
#define TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_5 'b'
#define TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_6 'i'
#define TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_7 't'
#define TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_8 'e'
#define TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_9 '_'
#define TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_10 'e'
#define TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_11 'a'
#define TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_12 'z'
#define TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_13 'e'
#define TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_14 'l'
#define TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_15 '_'
#define TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_16 'i'
#define TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_17 'n'
#define TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_18 's'
#define TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_19 't'
#define TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_20 'a'
#define TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_21 'l'
#define TC_IMPL_TC_Trilobite_Eazel_PackageStatusEnum_22 'l'
   extern const struct CORBA_TypeCode_struct
      TC_Trilobite_Eazel_PackageStatusEnum_struct;
#define TC_Trilobite_Eazel_PackageStatusEnum ((CORBA_TypeCode)&TC_Trilobite_Eazel_PackageStatusEnum_struct)
#endif
#endif
#if !defined(_Trilobite_Eazel_ProtocolEnum_defined)
#define _Trilobite_Eazel_ProtocolEnum_defined 1
   typedef enum
   {
      Trilobite_Eazel_PROTOCOL_HTTP,
      Trilobite_Eazel_PROTOCOL_FTP,
      Trilobite_Eazel_PROTOCOL_LOCAL
   }
   Trilobite_Eazel_ProtocolEnum;
#if !defined(TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_0)
#define TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_0 't'
#define TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_1 'r'
#define TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_2 'i'
#define TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_3 'l'
#define TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_4 'o'
#define TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_5 'b'
#define TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_6 'i'
#define TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_7 't'
#define TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_8 'e'
#define TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_9 '_'
#define TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_10 'e'
#define TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_11 'a'
#define TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_12 'z'
#define TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_13 'e'
#define TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_14 'l'
#define TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_15 '_'
#define TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_16 'i'
#define TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_17 'n'
#define TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_18 's'
#define TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_19 't'
#define TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_20 'a'
#define TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_21 'l'
#define TC_IMPL_TC_Trilobite_Eazel_ProtocolEnum_22 'l'
   extern const struct CORBA_TypeCode_struct
      TC_Trilobite_Eazel_ProtocolEnum_struct;
#define TC_Trilobite_Eazel_ProtocolEnum ((CORBA_TypeCode)&TC_Trilobite_Eazel_ProtocolEnum_struct)
#endif
#endif
#if !defined(_Trilobite_Eazel_DistributionStruct_defined)
#define _Trilobite_Eazel_DistributionStruct_defined 1
   typedef struct
   {
      CORBA_char *name;
      CORBA_long major;
      CORBA_long minor;
   }
   Trilobite_Eazel_DistributionStruct;

#if !defined(TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_0)
#define TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_0 't'
#define TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_1 'r'
#define TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_2 'i'
#define TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_3 'l'
#define TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_4 'o'
#define TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_5 'b'
#define TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_6 'i'
#define TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_7 't'
#define TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_8 'e'
#define TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_9 '_'
#define TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_10 'e'
#define TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_11 'a'
#define TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_12 'z'
#define TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_13 'e'
#define TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_14 'l'
#define TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_15 '_'
#define TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_16 'i'
#define TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_17 'n'
#define TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_18 's'
#define TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_19 't'
#define TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_20 'a'
#define TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_21 'l'
#define TC_IMPL_TC_Trilobite_Eazel_DistributionStruct_22 'l'
   extern const struct CORBA_TypeCode_struct
      TC_Trilobite_Eazel_DistributionStruct_struct;
#define TC_Trilobite_Eazel_DistributionStruct ((CORBA_TypeCode)&TC_Trilobite_Eazel_DistributionStruct_struct)
#endif
   extern Trilobite_Eazel_DistributionStruct
      *Trilobite_Eazel_DistributionStruct__alloc(void);
   extern gpointer Trilobite_Eazel_DistributionStruct__free(gpointer mem,
							    gpointer dat,
							    CORBA_boolean free_strings);	/* ORBit internal use */
#endif
#define ex_Trilobite_Eazel_NoAccess "IDL:Trilobite/Eazel/NoAccess:1.0"
   void _ORBIT_Trilobite_Eazel_NoAccess_demarshal(GIOPRecvBuffer *
						  _ORBIT_recv_buffer,
						  CORBA_Environment * ev);
   void _ORBIT_Trilobite_Eazel_NoAccess_marshal(GIOPSendBuffer *
						_ORBIT_send_buffer,
						CORBA_Environment * ev);
#if !defined(_Trilobite_Eazel_NoAccess_defined)
#define _Trilobite_Eazel_NoAccess_defined 1
   typedef struct
   {
      int dummy;
   }
   Trilobite_Eazel_NoAccess;

#if !defined(TC_IMPL_TC_Trilobite_Eazel_NoAccess_0)
#define TC_IMPL_TC_Trilobite_Eazel_NoAccess_0 't'
#define TC_IMPL_TC_Trilobite_Eazel_NoAccess_1 'r'
#define TC_IMPL_TC_Trilobite_Eazel_NoAccess_2 'i'
#define TC_IMPL_TC_Trilobite_Eazel_NoAccess_3 'l'
#define TC_IMPL_TC_Trilobite_Eazel_NoAccess_4 'o'
#define TC_IMPL_TC_Trilobite_Eazel_NoAccess_5 'b'
#define TC_IMPL_TC_Trilobite_Eazel_NoAccess_6 'i'
#define TC_IMPL_TC_Trilobite_Eazel_NoAccess_7 't'
#define TC_IMPL_TC_Trilobite_Eazel_NoAccess_8 'e'
#define TC_IMPL_TC_Trilobite_Eazel_NoAccess_9 '_'
#define TC_IMPL_TC_Trilobite_Eazel_NoAccess_10 'e'
#define TC_IMPL_TC_Trilobite_Eazel_NoAccess_11 'a'
#define TC_IMPL_TC_Trilobite_Eazel_NoAccess_12 'z'
#define TC_IMPL_TC_Trilobite_Eazel_NoAccess_13 'e'
#define TC_IMPL_TC_Trilobite_Eazel_NoAccess_14 'l'
#define TC_IMPL_TC_Trilobite_Eazel_NoAccess_15 '_'
#define TC_IMPL_TC_Trilobite_Eazel_NoAccess_16 'i'
#define TC_IMPL_TC_Trilobite_Eazel_NoAccess_17 'n'
#define TC_IMPL_TC_Trilobite_Eazel_NoAccess_18 's'
#define TC_IMPL_TC_Trilobite_Eazel_NoAccess_19 't'
#define TC_IMPL_TC_Trilobite_Eazel_NoAccess_20 'a'
#define TC_IMPL_TC_Trilobite_Eazel_NoAccess_21 'l'
#define TC_IMPL_TC_Trilobite_Eazel_NoAccess_22 'l'
   extern const struct CORBA_TypeCode_struct
      TC_Trilobite_Eazel_NoAccess_struct;
#define TC_Trilobite_Eazel_NoAccess ((CORBA_TypeCode)&TC_Trilobite_Eazel_NoAccess_struct)
#endif
#define Trilobite_Eazel_NoAccess__alloc() NULL
   extern gpointer Trilobite_Eazel_NoAccess__free(gpointer mem, gpointer dat,
						  CORBA_boolean free_strings);	/* ORBit internal use */
#endif
#define ex_Trilobite_Eazel_PackagesFailed "IDL:Trilobite/Eazel/PackagesFailed:1.0"
   void _ORBIT_Trilobite_Eazel_PackagesFailed_demarshal(GIOPRecvBuffer *
							_ORBIT_recv_buffer,
							CORBA_Environment *
							ev);
   void _ORBIT_Trilobite_Eazel_PackagesFailed_marshal(GIOPSendBuffer *
						      _ORBIT_send_buffer,
						      CORBA_Environment * ev);
#if !defined(_Trilobite_Eazel_PackagesFailed_defined)
#define _Trilobite_Eazel_PackagesFailed_defined 1
   typedef struct
   {
      int dummy;
   }
   Trilobite_Eazel_PackagesFailed;

#if !defined(TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_0)
#define TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_0 't'
#define TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_1 'r'
#define TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_2 'i'
#define TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_3 'l'
#define TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_4 'o'
#define TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_5 'b'
#define TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_6 'i'
#define TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_7 't'
#define TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_8 'e'
#define TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_9 '_'
#define TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_10 'e'
#define TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_11 'a'
#define TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_12 'z'
#define TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_13 'e'
#define TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_14 'l'
#define TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_15 '_'
#define TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_16 'i'
#define TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_17 'n'
#define TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_18 's'
#define TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_19 't'
#define TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_20 'a'
#define TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_21 'l'
#define TC_IMPL_TC_Trilobite_Eazel_PackagesFailed_22 'l'
   extern const struct CORBA_TypeCode_struct
      TC_Trilobite_Eazel_PackagesFailed_struct;
#define TC_Trilobite_Eazel_PackagesFailed ((CORBA_TypeCode)&TC_Trilobite_Eazel_PackagesFailed_struct)
#endif
#define Trilobite_Eazel_PackagesFailed__alloc() NULL
   extern gpointer Trilobite_Eazel_PackagesFailed__free(gpointer mem,
							gpointer dat,
							CORBA_boolean free_strings);	/* ORBit internal use */
#endif
#if !defined(_Trilobite_Eazel_PackageDataStruct_defined)
#define _Trilobite_Eazel_PackageDataStruct_defined 1
   typedef struct
   {
      CORBA_char *name;
      CORBA_char *version;
      CORBA_char *filename;
      CORBA_char *archtype;
      Trilobite_Eazel_DistributionStruct distribution;
      CORBA_char *release;
      CORBA_char *summary;
      CORBA_long bytesize;
      CORBA_boolean toplevel;
      Trilobite_Eazel_PackageStatusEnum status;
   }
   Trilobite_Eazel_PackageDataStruct;

#if !defined(TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_0)
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_0 't'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_1 'r'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_2 'i'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_3 'l'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_4 'o'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_5 'b'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_6 'i'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_7 't'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_8 'e'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_9 '_'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_10 'e'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_11 'a'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_12 'z'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_13 'e'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_14 'l'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_15 '_'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_16 'i'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_17 'n'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_18 's'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_19 't'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_20 'a'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_21 'l'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStruct_22 'l'
   extern const struct CORBA_TypeCode_struct
      TC_Trilobite_Eazel_PackageDataStruct_struct;
#define TC_Trilobite_Eazel_PackageDataStruct ((CORBA_TypeCode)&TC_Trilobite_Eazel_PackageDataStruct_struct)
#endif
   extern Trilobite_Eazel_PackageDataStruct
      *Trilobite_Eazel_PackageDataStruct__alloc(void);
   extern gpointer Trilobite_Eazel_PackageDataStruct__free(gpointer mem,
							   gpointer dat,
							   CORBA_boolean free_strings);	/* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct) && !defined(_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_defined)
#define ORBIT_DECL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct 1
#define _CORBA_sequence_Trilobite_Eazel_PackageDataStruct_defined 1
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_0 't'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_1 'r'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_2 'i'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_3 'l'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_4 'o'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_5 'b'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_6 'i'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_7 't'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_8 'e'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_9 '_'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_10 'e'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_11 'a'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_12 'z'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_13 'e'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_14 'l'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_15 '_'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_16 'i'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_17 'n'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_18 's'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_19 't'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_20 'a'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_21 'l'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_22 'l'
   typedef struct
   {
      CORBA_unsigned_long _maximum,
       _length;
      Trilobite_Eazel_PackageDataStruct *_buffer;
      CORBA_boolean _release;
   }
   CORBA_sequence_Trilobite_Eazel_PackageDataStruct;
#if !defined(TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_0)
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_0 't'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_1 'r'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_2 'i'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_3 'l'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_4 'o'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_5 'b'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_6 'i'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_7 't'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_8 'e'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_9 '_'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_10 'e'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_11 'a'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_12 'z'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_13 'e'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_14 'l'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_15 '_'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_16 'i'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_17 'n'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_18 's'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_19 't'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_20 'a'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_21 'l'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_22 'l'
   extern const struct CORBA_TypeCode_struct
      TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_struct;
#define TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct ((CORBA_TypeCode)&TC_CORBA_sequence_Trilobite_Eazel_PackageDataStruct_struct)
#endif
   extern CORBA_sequence_Trilobite_Eazel_PackageDataStruct
      *CORBA_sequence_Trilobite_Eazel_PackageDataStruct__alloc(void);
   extern gpointer
      CORBA_sequence_Trilobite_Eazel_PackageDataStruct__free(gpointer mem,
							     gpointer dat,
							     CORBA_boolean free_strings);	/* ORBit internal use */
   Trilobite_Eazel_PackageDataStruct
      *CORBA_sequence_Trilobite_Eazel_PackageDataStruct_allocbuf
      (CORBA_unsigned_long len);
#endif
#if !defined(_Trilobite_Eazel_PackageDataStructList_defined)
#define _Trilobite_Eazel_PackageDataStructList_defined 1
   typedef CORBA_sequence_Trilobite_Eazel_PackageDataStruct
      Trilobite_Eazel_PackageDataStructList;
#if !defined(TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_0)
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_0 't'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_1 'r'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_2 'i'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_3 'l'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_4 'o'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_5 'b'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_6 'i'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_7 't'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_8 'e'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_9 '_'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_10 'e'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_11 'a'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_12 'z'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_13 'e'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_14 'l'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_15 '_'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_16 'i'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_17 'n'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_18 's'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_19 't'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_20 'a'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_21 'l'
#define TC_IMPL_TC_Trilobite_Eazel_PackageDataStructList_22 'l'
   extern const struct CORBA_TypeCode_struct
      TC_Trilobite_Eazel_PackageDataStructList_struct;
#define TC_Trilobite_Eazel_PackageDataStructList ((CORBA_TypeCode)&TC_Trilobite_Eazel_PackageDataStructList_struct)
#endif
   extern Trilobite_Eazel_PackageDataStructList
      *Trilobite_Eazel_PackageDataStructList__alloc(void);
   extern gpointer Trilobite_Eazel_PackageDataStructList__free(gpointer mem,
							       gpointer dat,
							       CORBA_boolean free_strings);	/* ORBit internal use */
#endif
#if !defined(_Trilobite_Eazel_CategoryStruct_defined)
#define _Trilobite_Eazel_CategoryStruct_defined 1
   typedef struct
   {
      CORBA_char *name;
      Trilobite_Eazel_PackageDataStructList packages;
   }
   Trilobite_Eazel_CategoryStruct;

#if !defined(TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_0)
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_0 't'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_1 'r'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_2 'i'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_3 'l'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_4 'o'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_5 'b'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_6 'i'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_7 't'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_8 'e'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_9 '_'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_10 'e'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_11 'a'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_12 'z'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_13 'e'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_14 'l'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_15 '_'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_16 'i'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_17 'n'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_18 's'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_19 't'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_20 'a'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_21 'l'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStruct_22 'l'
   extern const struct CORBA_TypeCode_struct
      TC_Trilobite_Eazel_CategoryStruct_struct;
#define TC_Trilobite_Eazel_CategoryStruct ((CORBA_TypeCode)&TC_Trilobite_Eazel_CategoryStruct_struct)
#endif
   extern Trilobite_Eazel_CategoryStruct
      *Trilobite_Eazel_CategoryStruct__alloc(void);
   extern gpointer Trilobite_Eazel_CategoryStruct__free(gpointer mem,
							gpointer dat,
							CORBA_boolean free_strings);	/* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_CORBA_sequence_Trilobite_Eazel_CategoryStruct) && !defined(_CORBA_sequence_Trilobite_Eazel_CategoryStruct_defined)
#define ORBIT_DECL_CORBA_sequence_Trilobite_Eazel_CategoryStruct 1
#define _CORBA_sequence_Trilobite_Eazel_CategoryStruct_defined 1
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_CategoryStruct_0 't'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_CategoryStruct_1 'r'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_CategoryStruct_2 'i'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_CategoryStruct_3 'l'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_CategoryStruct_4 'o'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_CategoryStruct_5 'b'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_CategoryStruct_6 'i'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_CategoryStruct_7 't'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_CategoryStruct_8 'e'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_CategoryStruct_9 '_'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_CategoryStruct_10 'e'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_CategoryStruct_11 'a'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_CategoryStruct_12 'z'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_CategoryStruct_13 'e'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_CategoryStruct_14 'l'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_CategoryStruct_15 '_'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_CategoryStruct_16 'i'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_CategoryStruct_17 'n'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_CategoryStruct_18 's'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_CategoryStruct_19 't'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_CategoryStruct_20 'a'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_CategoryStruct_21 'l'
#define ORBIT_IMPL_CORBA_sequence_Trilobite_Eazel_CategoryStruct_22 'l'
   typedef struct
   {
      CORBA_unsigned_long _maximum,
       _length;
      Trilobite_Eazel_CategoryStruct *_buffer;
      CORBA_boolean _release;
   }
   CORBA_sequence_Trilobite_Eazel_CategoryStruct;
#if !defined(TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_0)
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_0 't'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_1 'r'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_2 'i'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_3 'l'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_4 'o'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_5 'b'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_6 'i'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_7 't'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_8 'e'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_9 '_'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_10 'e'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_11 'a'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_12 'z'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_13 'e'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_14 'l'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_15 '_'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_16 'i'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_17 'n'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_18 's'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_19 't'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_20 'a'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_21 'l'
#define TC_IMPL_TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_22 'l'
   extern const struct CORBA_TypeCode_struct
      TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_struct;
#define TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct ((CORBA_TypeCode)&TC_CORBA_sequence_Trilobite_Eazel_CategoryStruct_struct)
#endif
   extern CORBA_sequence_Trilobite_Eazel_CategoryStruct
      *CORBA_sequence_Trilobite_Eazel_CategoryStruct__alloc(void);
   extern gpointer
      CORBA_sequence_Trilobite_Eazel_CategoryStruct__free(gpointer mem,
							  gpointer dat,
							  CORBA_boolean free_strings);	/* ORBit internal use */
   Trilobite_Eazel_CategoryStruct
      *CORBA_sequence_Trilobite_Eazel_CategoryStruct_allocbuf
      (CORBA_unsigned_long len);
#endif
#if !defined(_Trilobite_Eazel_CategoryStructList_defined)
#define _Trilobite_Eazel_CategoryStructList_defined 1
   typedef CORBA_sequence_Trilobite_Eazel_CategoryStruct
      Trilobite_Eazel_CategoryStructList;
#if !defined(TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_0)
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_0 't'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_1 'r'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_2 'i'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_3 'l'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_4 'o'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_5 'b'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_6 'i'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_7 't'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_8 'e'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_9 '_'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_10 'e'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_11 'a'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_12 'z'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_13 'e'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_14 'l'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_15 '_'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_16 'i'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_17 'n'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_18 's'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_19 't'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_20 'a'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_21 'l'
#define TC_IMPL_TC_Trilobite_Eazel_CategoryStructList_22 'l'
   extern const struct CORBA_TypeCode_struct
      TC_Trilobite_Eazel_CategoryStructList_struct;
#define TC_Trilobite_Eazel_CategoryStructList ((CORBA_TypeCode)&TC_Trilobite_Eazel_CategoryStructList_struct)
#endif
   extern Trilobite_Eazel_CategoryStructList
      *Trilobite_Eazel_CategoryStructList__alloc(void);
   extern gpointer Trilobite_Eazel_CategoryStructList__free(gpointer mem,
							    gpointer dat,
							    CORBA_boolean free_strings);	/* ORBit internal use */
#endif
#if !defined(ORBIT_DECL_Trilobite_Eazel_InstallCallback) && !defined(_Trilobite_Eazel_InstallCallback_defined)
#define ORBIT_DECL_Trilobite_Eazel_InstallCallback 1
#define _Trilobite_Eazel_InstallCallback_defined 1
#define Trilobite_Eazel_InstallCallback__free CORBA_Object__free
   typedef CORBA_Object Trilobite_Eazel_InstallCallback;
   extern CORBA_unsigned_long Trilobite_Eazel_InstallCallback__classid;
#if !defined(TC_IMPL_TC_Trilobite_Eazel_InstallCallback_0)
#define TC_IMPL_TC_Trilobite_Eazel_InstallCallback_0 't'
#define TC_IMPL_TC_Trilobite_Eazel_InstallCallback_1 'r'
#define TC_IMPL_TC_Trilobite_Eazel_InstallCallback_2 'i'
#define TC_IMPL_TC_Trilobite_Eazel_InstallCallback_3 'l'
#define TC_IMPL_TC_Trilobite_Eazel_InstallCallback_4 'o'
#define TC_IMPL_TC_Trilobite_Eazel_InstallCallback_5 'b'
#define TC_IMPL_TC_Trilobite_Eazel_InstallCallback_6 'i'
#define TC_IMPL_TC_Trilobite_Eazel_InstallCallback_7 't'
#define TC_IMPL_TC_Trilobite_Eazel_InstallCallback_8 'e'
#define TC_IMPL_TC_Trilobite_Eazel_InstallCallback_9 '_'
#define TC_IMPL_TC_Trilobite_Eazel_InstallCallback_10 'e'
#define TC_IMPL_TC_Trilobite_Eazel_InstallCallback_11 'a'
#define TC_IMPL_TC_Trilobite_Eazel_InstallCallback_12 'z'
#define TC_IMPL_TC_Trilobite_Eazel_InstallCallback_13 'e'
#define TC_IMPL_TC_Trilobite_Eazel_InstallCallback_14 'l'
#define TC_IMPL_TC_Trilobite_Eazel_InstallCallback_15 '_'
#define TC_IMPL_TC_Trilobite_Eazel_InstallCallback_16 'i'
#define TC_IMPL_TC_Trilobite_Eazel_InstallCallback_17 'n'
#define TC_IMPL_TC_Trilobite_Eazel_InstallCallback_18 's'
#define TC_IMPL_TC_Trilobite_Eazel_InstallCallback_19 't'
#define TC_IMPL_TC_Trilobite_Eazel_InstallCallback_20 'a'
#define TC_IMPL_TC_Trilobite_Eazel_InstallCallback_21 'l'
#define TC_IMPL_TC_Trilobite_Eazel_InstallCallback_22 'l'
   extern const struct CORBA_TypeCode_struct
      TC_Trilobite_Eazel_InstallCallback_struct;
#define TC_Trilobite_Eazel_InstallCallback ((CORBA_TypeCode)&TC_Trilobite_Eazel_InstallCallback_struct)
#endif
#endif
#if !defined(ORBIT_DECL_Trilobite_Eazel_Install) && !defined(_Trilobite_Eazel_Install_defined)
#define ORBIT_DECL_Trilobite_Eazel_Install 1
#define _Trilobite_Eazel_Install_defined 1
#define Trilobite_Eazel_Install__free CORBA_Object__free
   typedef CORBA_Object Trilobite_Eazel_Install;
   extern CORBA_unsigned_long Trilobite_Eazel_Install__classid;
#if !defined(TC_IMPL_TC_Trilobite_Eazel_Install_0)
#define TC_IMPL_TC_Trilobite_Eazel_Install_0 't'
#define TC_IMPL_TC_Trilobite_Eazel_Install_1 'r'
#define TC_IMPL_TC_Trilobite_Eazel_Install_2 'i'
#define TC_IMPL_TC_Trilobite_Eazel_Install_3 'l'
#define TC_IMPL_TC_Trilobite_Eazel_Install_4 'o'
#define TC_IMPL_TC_Trilobite_Eazel_Install_5 'b'
#define TC_IMPL_TC_Trilobite_Eazel_Install_6 'i'
#define TC_IMPL_TC_Trilobite_Eazel_Install_7 't'
#define TC_IMPL_TC_Trilobite_Eazel_Install_8 'e'
#define TC_IMPL_TC_Trilobite_Eazel_Install_9 '_'
#define TC_IMPL_TC_Trilobite_Eazel_Install_10 'e'
#define TC_IMPL_TC_Trilobite_Eazel_Install_11 'a'
#define TC_IMPL_TC_Trilobite_Eazel_Install_12 'z'
#define TC_IMPL_TC_Trilobite_Eazel_Install_13 'e'
#define TC_IMPL_TC_Trilobite_Eazel_Install_14 'l'
#define TC_IMPL_TC_Trilobite_Eazel_Install_15 '_'
#define TC_IMPL_TC_Trilobite_Eazel_Install_16 'i'
#define TC_IMPL_TC_Trilobite_Eazel_Install_17 'n'
#define TC_IMPL_TC_Trilobite_Eazel_Install_18 's'
#define TC_IMPL_TC_Trilobite_Eazel_Install_19 't'
#define TC_IMPL_TC_Trilobite_Eazel_Install_20 'a'
#define TC_IMPL_TC_Trilobite_Eazel_Install_21 'l'
#define TC_IMPL_TC_Trilobite_Eazel_Install_22 'l'
   extern const struct CORBA_TypeCode_struct
      TC_Trilobite_Eazel_Install_struct;
#define TC_Trilobite_Eazel_Install ((CORBA_TypeCode)&TC_Trilobite_Eazel_Install_struct)
#endif
#endif

/** POA structures **/
   typedef struct
   {
      void *_private;
      void (*download_progress) (PortableServer_Servant _servant,
				 const CORBA_char * file,
				 const CORBA_long amount,
				 const CORBA_long total,
				 CORBA_Environment * ev);
      void (*dependency_check) (PortableServer_Servant _servant,
				const Trilobite_Eazel_PackageDataStruct *
				package,
				const Trilobite_Eazel_PackageDataStruct *
				needs, CORBA_Environment * ev);
      void (*preflight_check) (PortableServer_Servant _servant,
			       const CORBA_long total_size,
			       const CORBA_long num_packages,
			       CORBA_Environment * ev);
      void (*install_progress) (PortableServer_Servant _servant,
				const Trilobite_Eazel_PackageDataStruct *
				package, const CORBA_long package_num,
				const CORBA_long num_packages,
				const CORBA_long package_size_completed,
				const CORBA_long package_size_total,
				const CORBA_long total_size_completed,
				const CORBA_long total_size,
				CORBA_Environment * ev);
      void (*uninstall_progress) (PortableServer_Servant _servant,
				  const Trilobite_Eazel_PackageDataStruct *
				  package, const CORBA_long amount,
				  const CORBA_long total,
				  CORBA_Environment * ev);
      void (*download_failed) (PortableServer_Servant _servant,
			       const CORBA_char * file,
			       CORBA_Environment * ev);
      void (*install_failed) (PortableServer_Servant _servant,
			      const CORBA_char * xml_package,
			      CORBA_Environment * ev);
      void (*uninstall_failed) (PortableServer_Servant _servant,
				const CORBA_char * xml_package,
				CORBA_Environment * ev);
       CORBA_boolean(*delete_files) (PortableServer_Servant _servant,
				     CORBA_Environment * ev);
      void (*done) (PortableServer_Servant _servant, CORBA_Environment * ev);
   }
   POA_Trilobite_Eazel_InstallCallback__epv;
   typedef struct
   {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_Trilobite_Eazel_InstallCallback__epv
	 *Trilobite_Eazel_InstallCallback_epv;
   }
   POA_Trilobite_Eazel_InstallCallback__vepv;
   typedef struct
   {
      void *_private;
      POA_Trilobite_Eazel_InstallCallback__vepv *vepv;
   }
   POA_Trilobite_Eazel_InstallCallback;
   extern void
      POA_Trilobite_Eazel_InstallCallback__init(PortableServer_Servant
						servant,
						CORBA_Environment * ev);
   extern void
      POA_Trilobite_Eazel_InstallCallback__fini(PortableServer_Servant
						servant,
						CORBA_Environment * ev);
   typedef struct
   {
      void *_private;
      
	 CORBA_boolean(*_get_verbose) (PortableServer_Servant _servant,
				       CORBA_Environment * ev);
      void (*_set_verbose) (PortableServer_Servant _servant,
			    const CORBA_boolean value,
			    CORBA_Environment * ev);
       CORBA_boolean(*_get_silent) (PortableServer_Servant _servant,
				    CORBA_Environment * ev);
      void (*_set_silent) (PortableServer_Servant _servant,
			   const CORBA_boolean value, CORBA_Environment * ev);
       CORBA_boolean(*_get_test_mode) (PortableServer_Servant _servant,
				       CORBA_Environment * ev);
      void (*_set_test_mode) (PortableServer_Servant _servant,
			      const CORBA_boolean value,
			      CORBA_Environment * ev);
       CORBA_boolean(*_get_force) (PortableServer_Servant _servant,
				   CORBA_Environment * ev);
      void (*_set_force) (PortableServer_Servant _servant,
			  const CORBA_boolean value, CORBA_Environment * ev);
       CORBA_boolean(*_get_update) (PortableServer_Servant _servant,
				    CORBA_Environment * ev);
      void (*_set_update) (PortableServer_Servant _servant,
			   const CORBA_boolean value, CORBA_Environment * ev);
       CORBA_boolean(*_get_downgrade) (PortableServer_Servant _servant,
				       CORBA_Environment * ev);
      void (*_set_downgrade) (PortableServer_Servant _servant,
			      const CORBA_boolean value,
			      CORBA_Environment * ev);
      CORBA_char *(*_get_package_list) (PortableServer_Servant _servant,
					CORBA_Environment * ev);
      void (*_set_package_list) (PortableServer_Servant _servant,
				 const CORBA_char * value,
				 CORBA_Environment * ev);
      CORBA_char *(*_get_server) (PortableServer_Servant _servant,
				  CORBA_Environment * ev);
      void (*_set_server) (PortableServer_Servant _servant,
			   const CORBA_char * value, CORBA_Environment * ev);
       CORBA_long(*_get_server_port) (PortableServer_Servant _servant,
				      CORBA_Environment * ev);
      void (*_set_server_port) (PortableServer_Servant _servant,
				const CORBA_long value,
				CORBA_Environment * ev);
      CORBA_char *(*_get_log_file) (PortableServer_Servant _servant,
				    CORBA_Environment * ev);
      void (*_set_log_file) (PortableServer_Servant _servant,
			     const CORBA_char * value,
			     CORBA_Environment * ev);
      CORBA_char *(*_get_tmp_dir) (PortableServer_Servant _servant,
				   CORBA_Environment * ev);
      void (*_set_tmp_dir) (PortableServer_Servant _servant,
			    const CORBA_char * value, CORBA_Environment * ev);
       Trilobite_Eazel_ProtocolEnum(*_get_protocol) (PortableServer_Servant
						     _servant,
						     CORBA_Environment * ev);
      void (*_set_protocol) (PortableServer_Servant _servant,
			     const Trilobite_Eazel_ProtocolEnum value,
			     CORBA_Environment * ev);
      void (*install) (PortableServer_Servant _servant,
		       const CORBA_char * packagelist,
		       const Trilobite_Eazel_InstallCallback cb,
		       CORBA_Environment * ev);
      void (*uninstall) (PortableServer_Servant _servant,
			 const CORBA_char * packagelist,
			 const Trilobite_Eazel_InstallCallback cb,
			 CORBA_Environment * ev);
      void (*install_packages) (PortableServer_Servant _servant,
				const Trilobite_Eazel_CategoryStructList *
				categories,
				const Trilobite_Eazel_InstallCallback cb,
				CORBA_Environment * ev);
      void (*uninstall_packages) (PortableServer_Servant _servant,
				  const Trilobite_Eazel_CategoryStructList *
				  categories,
				  const Trilobite_Eazel_InstallCallback cb,
				  CORBA_Environment * ev);
      Trilobite_Eazel_PackageDataStructList
	 *(*simple_query) (PortableServer_Servant _servant,
			   const CORBA_char * query, CORBA_Environment * ev);
      void (*revert_transaction) (PortableServer_Servant _servant,
				  const CORBA_char * xml,
				  const Trilobite_Eazel_InstallCallback cb,
				  CORBA_Environment * ev);
   }
   POA_Trilobite_Eazel_Install__epv;
   typedef struct
   {
      PortableServer_ServantBase__epv *_base_epv;
      POA_Bonobo_Unknown__epv *Bonobo_Unknown_epv;
      POA_Trilobite_Eazel_Install__epv *Trilobite_Eazel_Install_epv;
   }
   POA_Trilobite_Eazel_Install__vepv;
   typedef struct
   {
      void *_private;
      POA_Trilobite_Eazel_Install__vepv *vepv;
   }
   POA_Trilobite_Eazel_Install;
   extern void POA_Trilobite_Eazel_Install__init(PortableServer_Servant
						 servant,
						 CORBA_Environment * ev);
   extern void POA_Trilobite_Eazel_Install__fini(PortableServer_Servant
						 servant,
						 CORBA_Environment * ev);

/** prototypes **/
#define Trilobite_Eazel_InstallCallback_ref Bonobo_Unknown_ref
#define Trilobite_Eazel_InstallCallback_unref Bonobo_Unknown_unref
#define Trilobite_Eazel_InstallCallback_query_interface Bonobo_Unknown_query_interface
   void
      Trilobite_Eazel_InstallCallback_download_progress
      (Trilobite_Eazel_InstallCallback _obj, const CORBA_char * file,
       const CORBA_long amount, const CORBA_long total,
       CORBA_Environment * ev);
   void
      Trilobite_Eazel_InstallCallback_dependency_check
      (Trilobite_Eazel_InstallCallback _obj,
       const Trilobite_Eazel_PackageDataStruct * package,
       const Trilobite_Eazel_PackageDataStruct * needs,
       CORBA_Environment * ev);
   void
      Trilobite_Eazel_InstallCallback_preflight_check
      (Trilobite_Eazel_InstallCallback _obj, const CORBA_long total_size,
       const CORBA_long num_packages, CORBA_Environment * ev);
   void
      Trilobite_Eazel_InstallCallback_install_progress
      (Trilobite_Eazel_InstallCallback _obj,
       const Trilobite_Eazel_PackageDataStruct * package,
       const CORBA_long package_num, const CORBA_long num_packages,
       const CORBA_long package_size_completed,
       const CORBA_long package_size_total,
       const CORBA_long total_size_completed, const CORBA_long total_size,
       CORBA_Environment * ev);
   void
      Trilobite_Eazel_InstallCallback_uninstall_progress
      (Trilobite_Eazel_InstallCallback _obj,
       const Trilobite_Eazel_PackageDataStruct * package,
       const CORBA_long amount, const CORBA_long total,
       CORBA_Environment * ev);
   void
      Trilobite_Eazel_InstallCallback_download_failed
      (Trilobite_Eazel_InstallCallback _obj, const CORBA_char * file,
       CORBA_Environment * ev);
   void
      Trilobite_Eazel_InstallCallback_install_failed
      (Trilobite_Eazel_InstallCallback _obj, const CORBA_char * xml_package,
       CORBA_Environment * ev);
   void
      Trilobite_Eazel_InstallCallback_uninstall_failed
      (Trilobite_Eazel_InstallCallback _obj, const CORBA_char * xml_package,
       CORBA_Environment * ev);
   CORBA_boolean
      Trilobite_Eazel_InstallCallback_delete_files
      (Trilobite_Eazel_InstallCallback _obj, CORBA_Environment * ev);
   void Trilobite_Eazel_InstallCallback_done(Trilobite_Eazel_InstallCallback
					     _obj, CORBA_Environment * ev);
#define Trilobite_Eazel_Install_ref Bonobo_Unknown_ref
#define Trilobite_Eazel_Install_unref Bonobo_Unknown_unref
#define Trilobite_Eazel_Install_query_interface Bonobo_Unknown_query_interface
   CORBA_boolean Trilobite_Eazel_Install__get_verbose(Trilobite_Eazel_Install
						      _obj,
						      CORBA_Environment * ev);
   void Trilobite_Eazel_Install__set_verbose(Trilobite_Eazel_Install _obj,
					     const CORBA_boolean value,
					     CORBA_Environment * ev);
   CORBA_boolean Trilobite_Eazel_Install__get_silent(Trilobite_Eazel_Install
						     _obj,
						     CORBA_Environment * ev);
   void Trilobite_Eazel_Install__set_silent(Trilobite_Eazel_Install _obj,
					    const CORBA_boolean value,
					    CORBA_Environment * ev);
   CORBA_boolean
      Trilobite_Eazel_Install__get_test_mode(Trilobite_Eazel_Install _obj,
					     CORBA_Environment * ev);
   void Trilobite_Eazel_Install__set_test_mode(Trilobite_Eazel_Install _obj,
					       const CORBA_boolean value,
					       CORBA_Environment * ev);
   CORBA_boolean Trilobite_Eazel_Install__get_force(Trilobite_Eazel_Install
						    _obj,
						    CORBA_Environment * ev);
   void Trilobite_Eazel_Install__set_force(Trilobite_Eazel_Install _obj,
					   const CORBA_boolean value,
					   CORBA_Environment * ev);
   CORBA_boolean Trilobite_Eazel_Install__get_update(Trilobite_Eazel_Install
						     _obj,
						     CORBA_Environment * ev);
   void Trilobite_Eazel_Install__set_update(Trilobite_Eazel_Install _obj,
					    const CORBA_boolean value,
					    CORBA_Environment * ev);
   CORBA_boolean
      Trilobite_Eazel_Install__get_downgrade(Trilobite_Eazel_Install _obj,
					     CORBA_Environment * ev);
   void Trilobite_Eazel_Install__set_downgrade(Trilobite_Eazel_Install _obj,
					       const CORBA_boolean value,
					       CORBA_Environment * ev);
   CORBA_char
      *Trilobite_Eazel_Install__get_package_list(Trilobite_Eazel_Install _obj,
						 CORBA_Environment * ev);
   void Trilobite_Eazel_Install__set_package_list(Trilobite_Eazel_Install
						  _obj,
						  const CORBA_char * value,
						  CORBA_Environment * ev);
   CORBA_char *Trilobite_Eazel_Install__get_server(Trilobite_Eazel_Install
						   _obj,
						   CORBA_Environment * ev);
   void Trilobite_Eazel_Install__set_server(Trilobite_Eazel_Install _obj,
					    const CORBA_char * value,
					    CORBA_Environment * ev);
   CORBA_long Trilobite_Eazel_Install__get_server_port(Trilobite_Eazel_Install
						       _obj,
						       CORBA_Environment *
						       ev);
   void Trilobite_Eazel_Install__set_server_port(Trilobite_Eazel_Install _obj,
						 const CORBA_long value,
						 CORBA_Environment * ev);
   CORBA_char *Trilobite_Eazel_Install__get_log_file(Trilobite_Eazel_Install
						     _obj,
						     CORBA_Environment * ev);
   void Trilobite_Eazel_Install__set_log_file(Trilobite_Eazel_Install _obj,
					      const CORBA_char * value,
					      CORBA_Environment * ev);
   CORBA_char *Trilobite_Eazel_Install__get_tmp_dir(Trilobite_Eazel_Install
						    _obj,
						    CORBA_Environment * ev);
   void Trilobite_Eazel_Install__set_tmp_dir(Trilobite_Eazel_Install _obj,
					     const CORBA_char * value,
					     CORBA_Environment * ev);
   Trilobite_Eazel_ProtocolEnum
      Trilobite_Eazel_Install__get_protocol(Trilobite_Eazel_Install _obj,
					    CORBA_Environment * ev);
   void Trilobite_Eazel_Install__set_protocol(Trilobite_Eazel_Install _obj,
					      const
					      Trilobite_Eazel_ProtocolEnum
					      value, CORBA_Environment * ev);
   void Trilobite_Eazel_Install_install(Trilobite_Eazel_Install _obj,
					const CORBA_char * packagelist,
					const Trilobite_Eazel_InstallCallback
					cb, CORBA_Environment * ev);
   void Trilobite_Eazel_Install_uninstall(Trilobite_Eazel_Install _obj,
					  const CORBA_char * packagelist,
					  const
					  Trilobite_Eazel_InstallCallback cb,
					  CORBA_Environment * ev);
   void Trilobite_Eazel_Install_install_packages(Trilobite_Eazel_Install _obj,
						 const
						 Trilobite_Eazel_CategoryStructList
						 * categories,
						 const
						 Trilobite_Eazel_InstallCallback
						 cb, CORBA_Environment * ev);
   void Trilobite_Eazel_Install_uninstall_packages(Trilobite_Eazel_Install
						   _obj,
						   const
						   Trilobite_Eazel_CategoryStructList
						   * categories,
						   const
						   Trilobite_Eazel_InstallCallback
						   cb,
						   CORBA_Environment * ev);
   Trilobite_Eazel_PackageDataStructList
      *Trilobite_Eazel_Install_simple_query(Trilobite_Eazel_Install _obj,
					    const CORBA_char * query,
					    CORBA_Environment * ev);
   void Trilobite_Eazel_Install_revert_transaction(Trilobite_Eazel_Install
						   _obj,
						   const CORBA_char * xml,
						   const
						   Trilobite_Eazel_InstallCallback
						   cb,
						   CORBA_Environment * ev);

   void
      _ORBIT_skel_Trilobite_Eazel_InstallCallback_download_progress
      (POA_Trilobite_Eazel_InstallCallback * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl_download_progress) (PortableServer_Servant _servant,
					const CORBA_char * file,
					const CORBA_long amount,
					const CORBA_long total,
					CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_InstallCallback_dependency_check
      (POA_Trilobite_Eazel_InstallCallback * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl_dependency_check) (PortableServer_Servant _servant,
				       const Trilobite_Eazel_PackageDataStruct
				       * package,
				       const Trilobite_Eazel_PackageDataStruct
				       * needs, CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_InstallCallback_preflight_check
      (POA_Trilobite_Eazel_InstallCallback * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl_preflight_check) (PortableServer_Servant _servant,
				      const CORBA_long total_size,
				      const CORBA_long num_packages,
				      CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_InstallCallback_install_progress
      (POA_Trilobite_Eazel_InstallCallback * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl_install_progress) (PortableServer_Servant _servant,
				       const Trilobite_Eazel_PackageDataStruct
				       * package,
				       const CORBA_long package_num,
				       const CORBA_long num_packages,
				       const CORBA_long
				       package_size_completed,
				       const CORBA_long package_size_total,
				       const CORBA_long total_size_completed,
				       const CORBA_long total_size,
				       CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_InstallCallback_uninstall_progress
      (POA_Trilobite_Eazel_InstallCallback * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl_uninstall_progress) (PortableServer_Servant _servant,
					 const
					 Trilobite_Eazel_PackageDataStruct *
					 package, const CORBA_long amount,
					 const CORBA_long total,
					 CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_InstallCallback_download_failed
      (POA_Trilobite_Eazel_InstallCallback * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl_download_failed) (PortableServer_Servant _servant,
				      const CORBA_char * file,
				      CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_InstallCallback_install_failed
      (POA_Trilobite_Eazel_InstallCallback * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl_install_failed) (PortableServer_Servant _servant,
				     const CORBA_char * xml_package,
				     CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_InstallCallback_uninstall_failed
      (POA_Trilobite_Eazel_InstallCallback * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl_uninstall_failed) (PortableServer_Servant _servant,
				       const CORBA_char * xml_package,
				       CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_InstallCallback_delete_files
      (POA_Trilobite_Eazel_InstallCallback * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       CORBA_boolean(*_impl_delete_files) (PortableServer_Servant _servant,
					   CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_InstallCallback_done
      (POA_Trilobite_Eazel_InstallCallback * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl_done) (PortableServer_Servant _servant,
			   CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__get_verbose
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       CORBA_boolean(*_impl__get_verbose) (PortableServer_Servant _servant,
					   CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__set_verbose
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl__set_verbose) (PortableServer_Servant _servant,
				   const CORBA_boolean value,
				   CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__get_silent
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       CORBA_boolean(*_impl__get_silent) (PortableServer_Servant _servant,
					  CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__set_silent
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl__set_silent) (PortableServer_Servant _servant,
				  const CORBA_boolean value,
				  CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__get_test_mode
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       CORBA_boolean(*_impl__get_test_mode) (PortableServer_Servant _servant,
					     CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__set_test_mode
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl__set_test_mode) (PortableServer_Servant _servant,
				     const CORBA_boolean value,
				     CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__get_force
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       CORBA_boolean(*_impl__get_force) (PortableServer_Servant _servant,
					 CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__set_force
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl__set_force) (PortableServer_Servant _servant,
				 const CORBA_boolean value,
				 CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__get_update
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       CORBA_boolean(*_impl__get_update) (PortableServer_Servant _servant,
					  CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__set_update
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl__set_update) (PortableServer_Servant _servant,
				  const CORBA_boolean value,
				  CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__get_downgrade
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       CORBA_boolean(*_impl__get_downgrade) (PortableServer_Servant _servant,
					     CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__set_downgrade
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl__set_downgrade) (PortableServer_Servant _servant,
				     const CORBA_boolean value,
				     CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__get_package_list
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       CORBA_char *
       (*_impl__get_package_list) (PortableServer_Servant _servant,
				   CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__set_package_list
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl__set_package_list) (PortableServer_Servant _servant,
					const CORBA_char * value,
					CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__get_server
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       CORBA_char * (*_impl__get_server) (PortableServer_Servant _servant,
					  CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__set_server
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl__set_server) (PortableServer_Servant _servant,
				  const CORBA_char * value,
				  CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__get_server_port
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       CORBA_long(*_impl__get_server_port) (PortableServer_Servant _servant,
					    CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__set_server_port
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl__set_server_port) (PortableServer_Servant _servant,
				       const CORBA_long value,
				       CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__get_log_file
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       CORBA_char * (*_impl__get_log_file) (PortableServer_Servant _servant,
					    CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__set_log_file
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl__set_log_file) (PortableServer_Servant _servant,
				    const CORBA_char * value,
				    CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__get_tmp_dir
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       CORBA_char * (*_impl__get_tmp_dir) (PortableServer_Servant _servant,
					   CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__set_tmp_dir
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl__set_tmp_dir) (PortableServer_Servant _servant,
				   const CORBA_char * value,
				   CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__get_protocol
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       Trilobite_Eazel_ProtocolEnum(*_impl__get_protocol)
       (PortableServer_Servant _servant, CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install__set_protocol
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl__set_protocol) (PortableServer_Servant _servant,
				    const Trilobite_Eazel_ProtocolEnum value,
				    CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install_install(POA_Trilobite_Eazel_Install
						  * _ORBIT_servant,
						  GIOPRecvBuffer *
						  _ORBIT_recv_buffer,
						  CORBA_Environment * ev,
						  void (*_impl_install)
						  (PortableServer_Servant
						   _servant,
						   const CORBA_char *
						   packagelist,
						   const
						   Trilobite_Eazel_InstallCallback
						   cb,
						   CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install_uninstall
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl_uninstall) (PortableServer_Servant _servant,
				const CORBA_char * packagelist,
				const Trilobite_Eazel_InstallCallback cb,
				CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install_install_packages
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl_install_packages) (PortableServer_Servant _servant,
				       const
				       Trilobite_Eazel_CategoryStructList *
				       categories,
				       const Trilobite_Eazel_InstallCallback
				       cb, CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install_uninstall_packages
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl_uninstall_packages) (PortableServer_Servant _servant,
					 const
					 Trilobite_Eazel_CategoryStructList *
					 categories,
					 const Trilobite_Eazel_InstallCallback
					 cb, CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install_simple_query
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       Trilobite_Eazel_PackageDataStructList *
       (*_impl_simple_query) (PortableServer_Servant _servant,
			      const CORBA_char * query,
			      CORBA_Environment * ev));
   void
      _ORBIT_skel_Trilobite_Eazel_Install_revert_transaction
      (POA_Trilobite_Eazel_Install * _ORBIT_servant,
       GIOPRecvBuffer * _ORBIT_recv_buffer, CORBA_Environment * ev,
       void (*_impl_revert_transaction) (PortableServer_Servant _servant,
					 const CORBA_char * xml,
					 const Trilobite_Eazel_InstallCallback
					 cb, CORBA_Environment * ev));
#ifdef __cplusplus
}
#endif				/* __cplusplus */

#endif
#undef ORBIT_IDL_SERIAL
